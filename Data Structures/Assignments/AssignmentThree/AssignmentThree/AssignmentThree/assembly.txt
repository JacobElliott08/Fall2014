	.section	__TEXT,__text,regular,pure_instructions
	.globl	_main
	.align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp2:
	.cfi_def_cfa_offset 16
Ltmp3:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp4:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	leaq	L_.str(%rip), %rax
	movl	$0, -4(%rbp)
	movl	%edi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rax, %rdi
	callq	_getInput
	movq	%rax, -24(%rbp)
	movl	$0, -28(%rbp)
LBB0_1:                                 ## =>This Inner Loop Header: Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         ## 8-byte Spill
	callq	_strlen
	movq	-40(%rbp), %rdi         ## 8-byte Reload
	cmpq	%rax, %rdi
	jae	LBB0_20
## BB#2:                                ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$40, %edx
	je	LBB0_10
## BB#3:                                ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$41, %edx
	je	LBB0_10
## BB#4:                                ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$42, %edx
	je	LBB0_10
## BB#5:                                ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$43, %edx
	je	LBB0_10
## BB#6:                                ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$47, %edx
	je	LBB0_10
## BB#7:                                ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$45, %edx
	je	LBB0_10
## BB#8:                                ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$32, %edx
	je	LBB0_10
## BB#9:                                ##   in Loop: Header=BB0_1 Depth=1
	leaq	L_.str1(%rip), %rdi
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %esi
	movb	$0, %al
	callq	_printf
	movl	%eax, -44(%rbp)         ## 4-byte Spill
LBB0_10:                                ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$40, %edx
	je	LBB0_17
## BB#11:                               ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$41, %edx
	je	LBB0_17
## BB#12:                               ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$42, %edx
	je	LBB0_17
## BB#13:                               ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$43, %edx
	je	LBB0_17
## BB#14:                               ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$47, %edx
	je	LBB0_17
## BB#15:                               ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$45, %edx
	je	LBB0_17
## BB#16:                               ##   in Loop: Header=BB0_1 Depth=1
	movslq	-28(%rbp), %rax
	movq	-24(%rbp), %rcx
	movsbl	(%rcx,%rax), %edx
	cmpl	$32, %edx
	jne	LBB0_18
LBB0_17:                                ##   in Loop: Header=BB0_1 Depth=1
	leaq	L_.str2(%rip), %rdi
	movb	$0, %al
	callq	_printf
	movl	%eax, -48(%rbp)         ## 4-byte Spill
LBB0_18:                                ##   in Loop: Header=BB0_1 Depth=1
	jmp	LBB0_19
LBB0_19:                                ##   in Loop: Header=BB0_1 Depth=1
	movl	-28(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -28(%rbp)
	jmp	LBB0_1
LBB0_20:
	movl	$0, %eax
	addq	$48, %rsp
	popq	%rbp
	retq
	.cfi_endproc

	.globl	_getInput
	.align	4, 0x90
_getInput:                              ## @getInput
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp7:
	.cfi_def_cfa_offset 16
Ltmp8:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp9:
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movabsq	$100, %rax
	movq	%rdi, -8(%rbp)
	movq	%rax, %rdi
	callq	_malloc
	leaq	L_.str3(%rip), %rdi
	movq	%rax, -24(%rbp)
	movq	-8(%rbp), %rsi
	movb	$0, %al
	callq	_printf
	movl	$100, %esi
	movq	___stdinp@GOTPCREL(%rip), %rdi
	movq	-24(%rbp), %rcx
	movq	(%rdi), %rdx
	movq	%rcx, %rdi
	movl	%eax, -28(%rbp)         ## 4-byte Spill
	callq	_fgets
	movq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         ## 8-byte Spill
	callq	_removeNewLineCharacter
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rdi
	callq	_free
	movq	-16(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	retq
	.cfi_endproc

	.globl	_removeNewLineCharacter
	.align	4, 0x90
_removeNewLineCharacter:                ## @removeNewLineCharacter
	.cfi_startproc
## BB#0:
	pushq	%rbp
Ltmp12:
	.cfi_def_cfa_offset 16
Ltmp13:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Ltmp14:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movabsq	$8, %rax
	movq	%rdi, -8(%rbp)
	movq	%rax, %rdi
	callq	_malloc
	movq	%rax, -24(%rbp)
	movl	$0, -12(%rbp)
LBB2_1:                                 ## =>This Inner Loop Header: Depth=1
	movslq	-12(%rbp), %rax
	movq	-8(%rbp), %rdi
	movq	%rax, -32(%rbp)         ## 8-byte Spill
	callq	_strlen
	movq	-32(%rbp), %rdi         ## 8-byte Reload
	cmpq	%rax, %rdi
	jae	LBB2_6
## BB#2:                                ##   in Loop: Header=BB2_1 Depth=1
	movslq	-12(%rbp), %rax
	movq	-8(%rbp), %rcx
	addq	%rax, %rcx
	leaq	L_.str2(%rip), %rsi
	movq	%rcx, %rdi
	callq	_strcmp
	cmpl	$0, %eax
	setne	%dl
	xorb	$1, %dl
	andb	$1, %dl
	movzbl	%dl, %eax
	cmpl	$0, %eax
	jne	LBB2_4
## BB#3:                                ##   in Loop: Header=BB2_1 Depth=1
	movslq	-12(%rbp), %rax
	movq	-8(%rbp), %rcx
	movb	(%rcx,%rax), %dl
	movslq	-12(%rbp), %rax
	movq	-24(%rbp), %rcx
	movb	%dl, (%rcx,%rax)
LBB2_4:                                 ##   in Loop: Header=BB2_1 Depth=1
	jmp	LBB2_5
LBB2_5:                                 ##   in Loop: Header=BB2_1 Depth=1
	movl	-12(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -12(%rbp)
	jmp	LBB2_1
LBB2_6:
	movq	-24(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	retq
	.cfi_endproc

	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"Please enter your name : "

L_.str1:                                ## @.str1
	.asciz	"%c"

L_.str2:                                ## @.str2
	.asciz	"\n"

L_.str3:                                ## @.str3
	.asciz	"%s"


.subsections_via_symbols
